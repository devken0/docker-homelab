version: "3.8"

networks:
  npm-net:
    driver: bridge

volumes:
  nextcloud_aio_mastercontainer:
    name: nextcloud_aio_mastercontainer
      
services:

  omada-controller:
    container_name: omada-controller
    image: mbentley/omada-controller:latest
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 4096
        hard: 8192
    stop_grace_period: 60s
    ports:
      #- 8088:8088/tcp
      #- 8043:8043/tcp
      - 9191:9191/tcp
      - 9444:9444/tcp
      - 27001:27001/udp
      - 29810:29810/udp
      - 29811-29816:29811-29816
        #network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - MANAGE_HTTP_PORT=8088
      - MANAGE_HTTPS_PORT=8043
      - PORTAL_HTTP_PORT=9191
      - PORTAL_HTTPS_PORT=9444
      - PORT_APP_DISCOVERY=27001
      - PORT_ADOPT_V1=29812
      - PORT_UPGRADE_V1=29813
      - PORT_MANAGER_V1=29811
      - PORT_MANAGER_V2=29814
      - PORT_DISCOVERY=29810
      - PORT_TRANSFER_V2=29815
      - PORT_RTTY=29816
      - SHOW_SERVER_LOGS=true
      - SHOW_MONGODB_LOGS=false
      - SSL_CERT_NAME=tls.crt
      - SSL_KEY_NAME=tls.key
      - TZ=Asia/Manila
    volumes:
      - ./omada/data:/opt/tplink/EAPController/data
      - ./omada/logs:/opt/tplink/EAPController/logs
    networks:
      - npm-net 

  npm:
    image: jc21/nginx-proxy-manager:latest
    restart: always
    container_name: npm
    ports:
      - 80:80 # Public HTTP Port
      - 443:443 # Public HTTPS Port
        #- 81:81 # Comment out after creating a proxy host for the service
    environment:
      DISABLE_IPV6: "true"
        #PUID: 1000 
        #PGID: 1000
    volumes:
      - ./nginxproxymanager/data:/data
      - ./nginxproxymanager/letsencrypt:/etc/letsencrypt
    networks:
      - npm-net 

  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    hostname: syncthing #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Manila
    volumes:
      - ./syncthing:/config
        #      - /home/ken/ncdata/App-Backups:/data1-App-Backups
        #      - /home/ken//nextcloud/data/ken/files/App-Exports:/data2-App-Exports
        #      - /var/snap/nextcloud/common/nextcloud/data/ken/files/Documents:/data3
        #      - /var/snap/nextcloud/common/nextcloud/data/ken/files/DCIM:/data4
        #      - /var/snap/nextcloud/common/nextcloud/data/ken/files/Github:/data5
        #      - /var/snap/nextcloud/common/nextcloud/data/ken/files/Music:/data6
        #      - /var/snap/nextcloud/common/nextcloud/data/ken/files/Pictures:/data7
        #      - /var/snap/nextcloud/common/nextcloud/data/ken/files/Sounds:/data8
    ports:
      #- 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
    networks:
      - npm-net

  yacht:
    container_name: yacht
    restart: always
      #    ports:
      #      - 8000:8000
    volumes:
      - ./yacht/config:/config
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      PUID: 1000
      PGID: 1000
    image: selfhostedpro/yacht    
    networks:
      - npm-net

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
    networks:
      - npm-net

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
        #      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
    environment:
      TZ: 'Asia/Manila'
      WEBPASSWORD: $PIHOLE_WEBPASSWORD 
      DNSMASQ_LISTENING: all
      PUID: 1000
      PGID: 1000
    # Volumes store your data between container upgrades
    volumes:
      - './pihole/etc-pihole:/etc/pihole'
      - './pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    #    cap_add:
    #      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
    networks:
      npm-net:

  ddns-updater:
    image: qmcgaw/ddns-updater
    container_name: ddns-updater
    #network_mode: bridge
    #ports:
    #  - 8000:8000/tcp
    volumes:
      - ./ddns-updater:/updater/data
    environment:
      - CONFIG=
      - PERIOD=5m
      - UPDATE_COOLDOWN_PERIOD=5m
      - PUBLICIP_FETCHERS=all
      - PUBLICIP_HTTP_PROVIDERS=all
      - PUBLICIPV4_HTTP_PROVIDERS=all
      - PUBLICIPV6_HTTP_PROVIDERS=all
      - PUBLICIP_DNS_PROVIDERS=all
      - PUBLICIP_DNS_TIMEOUT=3s
      - HTTP_TIMEOUT=10s

      # Web UI
      - LISTENING_ADDRESS=:8000
      - ROOT_URL=/

      # Backup
      - BACKUP_PERIOD=24h # 0 to disable
      - BACKUP_DIRECTORY=/updater/data

      # Other
      - LOG_LEVEL=info
      - LOG_CALLER=hidden
      - SHOUTRRR_ADDRESSES=
      - PUID=1000
      - PGID=1000
    restart: always
    networks:
      - npm-net

  nextcloud-aio-mastercontainer:
    image: nextcloud/all-in-one:latest
    container_name: nextcloud-aio-mastercontainer
    init: true
    restart: always
    ports:
      - 8080:8080
    environment:
      APACHE_PORT: 11000
      APACHE_IP_BINDING: "192.168.1.200"
      NEXTCLOUD_DATADIR: "/home/ken/ncdata"
      NEXTCLOUD_MOUNT: "/mnt/slow"
      SKIP_DOMAIN_VALIDATION: true
      NEXTCLOUD_ENABLE_DRI_DEVICE: true
    volumes:
      - nextcloud_aio_mastercontainer:/mnt/docker-aio-config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - npm-net

  ntfy:
    image: binwiederhier/ntfy
    container_name: ntfy
    command:
      - serve
    environment:
      - TZ=Asia/Manila    # optional: set desired timezone
    user: 1000:1000 # optional: replace with your own user/group or uid/gid
    volumes:
      - ./ntfy/cache:/var/cache/ntfy
      - ./ntfy/etc:/etc/ntfy
        #    ports:
        #      - 80:80
    healthcheck: # optional: remember to adapt the host:port to your environment
        test: ["CMD-SHELL", "wget -q --tries=1 http://localhost:80/v1/health -O - | grep -Eo '\"healthy\"\\s*:\\s*true' || exit 1"]
        interval: 60s
        timeout: 10s
        retries: 3
        start_period: 40s
    restart: unless-stopped
    networks:
      - npm-net

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
      #ports:
      #- 3000:3000
    volumes:
      - ./homepage/config:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations, see alternative methods
    environment:
      PUID: 1000
      PGID: 1000
    networks:
      - npm-net

  changedetection:
      image: ghcr.io/dgtlmoon/changedetection.io
      container_name: changedetection
      hostname: changedetection
      volumes:
        - ./changedetection:/datastore
# Configurable proxy list support, see https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration#proxy-list-support
#        - ./proxies.json:/datastore/proxies.json

      environment:
  #        Default listening port, can also be changed with the -p option
  #      - PORT=5000

        - PUID=1000
        - PGID=1000
  #
  #        Log levels are in descending order. (TRACE is the most detailed one)
  #        Log output levels: TRACE, DEBUG(default), INFO, SUCCESS, WARNING, ERROR, CRITICAL
  #      - LOGGER_LEVEL=DEBUG
  #
  #       Alternative WebDriver/selenium URL, do not use "'s or 's!
  #      - WEBDRIVER_URL=http://browser-chrome:4444/wd/hub
  #
  #       WebDriver proxy settings webdriver_proxyType, webdriver_ftpProxy, webdriver_noProxy,
  #                                webdriver_proxyAutoconfigUrl, webdriver_autodetect,
  #                                webdriver_socksProxy, webdriver_socksUsername, webdriver_socksVersion, webdriver_socksPassword
  #
  #             https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.common.proxy
  #
  #       Alternative Playwright URL, do not use "'s or 's!
  #      - PLAYWRIGHT_DRIVER_URL=ws://playwright-chrome:3000
  #
  #       Playwright proxy settings playwright_proxy_server, playwright_proxy_bypass, playwright_proxy_username, playwright_proxy_password
  #
  #             https://playwright.dev/python/docs/api/class-browsertype#browser-type-launch-option-proxy
  #
  #        Plain requests - proxy support example.
  #      - HTTP_PROXY=socks5h://10.10.1.10:1080
  #      - HTTPS_PROXY=socks5h://10.10.1.10:1080
  #
  #        An exclude list (useful for notification URLs above) can be specified by with
  #      - NO_PROXY="localhost,192.168.0.0/24"
  #
  #        Base URL of your changedetection.io install (Added to the notification alert)
  #      - BASE_URL=https://mysite.com
  #        Respect proxy_pass type settings, `proxy_set_header Host "localhost";` and `proxy_set_header X-Forwarded-Prefix /app;`
  #        More here https://github.com/dgtlmoon/changedetection.io/wiki/Running-changedetection.io-behind-a-reverse-proxy-sub-directory
  #      - USE_X_SETTINGS=1
  #
  #        Hides the `Referer` header so that monitored websites can't see the changedetection.io hostname.
  #      - HIDE_REFERER=true
  #        
  #        Default number of parallel/concurrent fetchers
  #      - FETCH_WORKERS=10

      # Comment out ports: when using behind a reverse proxy , enable networks: etc.
      #      ports:
      #        - 5000:5000
      restart: unless-stopped
      networks:
        - npm-net

     # Used for fetching pages via WebDriver+Chrome where you need Javascript support.
     # Now working on arm64 (needs testing on rPi - tested on Oracle ARM instance)
     # replace image with seleniarm/standalone-chromium:4.0.0-20211213
     
     # If WEBDRIVER or PLAYWRIGHT are enabled, changedetection container depends on that
     # and must wait before starting (substitute "browser-chrome" with "playwright-chrome" if last one is used)
#    depends_on:
#        browser-chrome:
#            condition: service_started

     # Used for fetching pages via Playwright+Chrome where you need Javascript support.
     # RECOMMENDED FOR FETCHING PAGES WITH CHROME
#    playwright-chrome:
#        hostname: playwright-chrome
#        image: dgtlmoon/sockpuppetbrowser:latest
#        cap_add:
#            - SYS_ADMIN
## SYS_ADMIN might be too much, but it can be needed on your platform https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#running-puppeteer-on-gitlabci
#        restart: unless-stopped
#        environment:
#            - SCREEN_WIDTH=1920
#            - SCREEN_HEIGHT=1024
#            - SCREEN_DEPTH=16
#            - MAX_CONCURRENT_CHROME_PROCESSES=10

     # Used for fetching pages via Playwright+Chrome where you need Javascript support.
     # Note: Works well but is deprecated, does not fetch full page screenshots (doesnt work with Visual Selector)
     #       Does not report status codes (200, 404, 403) and other issues
#    browser-chrome:
#        hostname: browser-chrome
#        image: selenium/standalone-chrome:4
#        environment:
#            - VNC_NO_PASSWORD=1
#            - SCREEN_WIDTH=1920
#            - SCREEN_HEIGHT=1080
#            - SCREEN_DEPTH=24
#        volumes:
#            # Workaround to avoid the browser crashing inside a docker container
#            # See https://github.com/SeleniumHQ/docker-selenium#quick-start
#            - /dev/shm:/dev/shm
#        restart: unless-stopped

  #  uptime-kuma:
  #    image: louislam/uptime-kuma:1
  #    container_name: uptime-kuma
  #    volumes:
  #      - /home/mc/AppData/uptime-kuma-data:/app/data
  #    ports:
  #      - 3001:3001  # <Host Port>:<Container Port>
  #    restart: always
  #
  #  adminer:
  #    image: adminer
  #    container_name: adminer
  #    restart: always
  #    ports:
  #      - 8083:8080
  #
  #  lms:
  #    container_name: lms
  #    image: epoupon/lms
  #    ports:
  #      - 5082:5082
  #    user: 1000:100
  #    volumes:
  #      - /home/mc/Audio:/music:ro 
  #      - /home/mc/AppData/lms:/var/lms 
  #    restart: unless-stopped
  #
  #  photoprism:
  #    container_name: photoprism
  #    image: photoprism/photoprism:latest
  #    depends_on:
  #      - photoprism_db 
  #    security_opt:
  #      - seccomp:unconfined
  #      - apparmor:unconfined
  #    ports:
  #      - "2342:2342"
  #    restart: unless-stopped
  #    environment:
  #      PHOTOPRISM_ADMIN_USER: "admin"                 # superadmin username
  #      PHOTOPRISM_ADMIN_PASSWORD: ""          # initial superadmin password (minimum 8 characters)
  #      PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
  #      PHOTOPRISM_SITE_URL: "http://photoprism.local:2342"   # server URL in the format "http(s)://domain.name(:port)/(path)"
  #      PHOTOPRISM_ORIGINALS_LIMIT: 5000               # file size limit for originals in MB (increase for high-res video)
  #      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
  #      PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
  #      PHOTOPRISM_READONLY: "false"                   # do not modify originals directory (reduced functionality)
  #      PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
  #      PHOTOPRISM_DISABLE_CHOWN: "false"              # disables updating storage permissions via chmod and chown on startup
  #      PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
  #      PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
  #      PHOTOPRISM_DISABLE_TENSORFLOW: "true"         # disables all features depending on TensorFlow
  #      PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition (requires TensorFlow)
  #      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification (requires TensorFlow)
  #      PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW files
  #      PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW files (reduces performance)
  #      PHOTOPRISM_JPEG_QUALITY: 85                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
  #      PHOTOPRISM_DETECT_NSFW: "false"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
  #      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
  #      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
  #      PHOTOPRISM_DATABASE_SERVER: "192.168.1.100:3301"     # MariaDB or MySQL database server (hostname:port)
  #      PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB or MySQL database schema name
  #      PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB or MySQL database user name
  #      PHOTOPRISM_DATABASE_PASSWORD: "insecure"       # MariaDB or MySQL database user password
  #      PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
  #      PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
  #      PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author
  #      PHOTOPRISM_FFMPEG_ENCODER: "intel"        # FFmpeg encoder ("software", "intel", "nvidia", "apple", "raspberry")
  #      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
  #    devices:
  #      - "/dev/dri:/dev/dri"                         # Intel QSV
  #    working_dir: "/photoprism" # do not change or remove
  #    volumes:
  #      # "/host/folder:/photoprism/folder"                # Example
  #      - "/home/mc/Gallery:/photoprism/originals"               # Original media files (DO NOT REMOVE)
  #      # - "/example/family:/photoprism/originals/family" # *Additional* media folders can be mounted like this
  #      # - "~/Import:/photoprism/import"                  # *Optional* base folder from which files can be imported to originals
  #      - "/home/mc/AppData/photoprism/storage:/photoprism/storage"                  # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)
  #
  #  photoprism_db:
  #    container_name: photoprism_db 
  #    image: mariadb:10.10
  #    security_opt: 
  #      - seccomp:unconfined
  #      - apparmor:unconfined
  #    command: mysqld --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
  #    ports:
  #      - 3301:3306
  #    volumes:
  #      - "/home/mc/AppData/photoprism/database:/var/lib/mysql" 
  #    environment:
  #      MARIADB_AUTO_UPGRADE: "1"
  #      MARIADB_INITDB_SKIP_TZINFO: "1"
  #      MARIADB_DATABASE: "photoprism"
  #      MARIADB_USER: "photoprism"
  #      MARIADB_PASSWORD: "insecure"
  #      MARIADB_ROOT_PASSWORD: "insecure"
  #    restart: unless-stopped
  #    
  #  filebrowser:
  #    container_name: filebrowser
  #    image: hurlenko/filebrowser
  #    user: "1000:100"
  #    ports:
  #      - 8082:8080
  #    volumes:
  #      - /home/mc:/data/files
  #      - /home/mc/AppData/filebrowser:/config
  #    environment:
  #      - http://192.168.1.100:8082=/filebrowser
  #    restart: unless-stopped 
  #
  #  bazarr:
  #    image: lscr.io/linuxserver/bazarr:latest
  #    container_name: bazarr
  #    environment:
  #      - PUID=1000
  #      - PGID=100
  #      - TZ=Asia/Manila
  #    volumes:
  #      - /home/mc/AppData/bazarr:/config
  #      - /home/mc/Media/movies:/movies #optional
  #      - /home/mc/Media/shows:/tv #optional
  #    ports:
  #      - 6767:6767
  #    restart: unless-stopped
  #
  #  duplicati:
  #    image: lscr.io/linuxserver/duplicati:latest
  #    container_name: duplicati
  #    environment:
  #      - PUID=1000
  #      - PGID=100
  #      - TZ=Asia/Manila
  #    volumes:
  #      - /home/mc/AppData/duplicati/config:/config
  #      - /home/mc/AppData/duplicati/backups:/backups
  #      - /:/source
  #    ports:
  #      - 8200:8200
  #    restart: unless-stopped
  #
  #  radarr:
  #    image: lscr.io/linuxserver/radarr:latest
  #    container_name: radarr
  #    environment:
  #      - PUID=1000
  #      - PGID=100
  #      - TZ=Asia/Manila
  #    volumes:
  #      - /home/mc/AppData/radarr:/config
  #      - /home/mc/Media/movies:/movies #optional
  #      - /home/mc/Media/torrents:/downloads #optional
  #    ports:
  #      - 7878:7878
  #    restart: unless-stopped
  #
  #  jackett:
  #    image: lscr.io/linuxserver/jackett:latest
  #    container_name: jackett
  #    environment:
  #      - PUID=1000
  #      - PGID=100
  #      - TZ=Asia/Manila
  #      - AUTO_UPDATE=true #optional
  #    volumes:
  #      - /home/mc/AppData/jackett:/config
  #      - /home/mc/Media/torrents:/downloads
  #    ports:
  #      - 9117:9117
  #    restart: unless-stopped
  #
  #  sonarr:
  #    image: lscr.io/linuxserver/sonarr:latest
  #    container_name: sonarr
  #    environment:
  #      - PUID=1000
  #      - PGID=100
  #      - TZ=Asia/Manila
  #    volumes:
  #      - /home/mc/AppData/sonarr:/config
  #      - /home/mc/Media/shows:/tv #optional
  #      - /home/mc/Media/torrents:/downloads #optional
  #    ports:
  #      - 8989:8989
  #    restart: unless-stopped
  #
  #  jellyfin:
  #    image: lscr.io/linuxserver/jellyfin:latest 
  #    container_name: jellyfin
  #    environment:
  #      - PUID=1000
  #      - PGID=100
  #      - TZ=Asia/Manila  
  #    volumes:
  #      - /home/mc/AppData/jellyfin:/config
  #      - /home/mc/Media/shows:/data/tvshows
  #      - /home/mc/Media/movies:/data/movies
  #    ports:
  #      - 8096:8096
  #      - 8920:8920 #optional
  #      - 7359:7359/udp #optional
  #      - 1900:1900/udp #optional
  #    devices:
  #      - /dev/dri:/dev/dri
  #    restart: unless-stopped
  #
  #  qbittorrent:
  #    image: lscr.io/linuxserver/qbittorrent:latest 
  #    container_name: qbittorrent
  #    environment:
  #      - PUID=1000
  #      - PGID=100
  #      - TZ=Asia/Manila
  #      - WEBUI_PORT=8080
  #    volumes:
  #      - /home/mc/AppData/qbittorrent:/config
  #      - /home/mc/Media/torrents:/downloads
  #    ports:
  #      - 8080:8080
  #      - 6881:6881
  #      - 6881:6881/udp
  #    restart: unless-stopped
  #    
  #  qbittorrentvpn:
  #    image: markusmcnugen/qbittorrentvpn 
  #    container_name: qbittorrentvpn
  #    environment:
  #      - PUID=0
  #      - PGID=0
  #      - TZ=Asia/Manila
  #      - VPN_ENABLED=yes
  #      - LAN_NETWORK=192.168.1.0/24
  #      - NAME_SERVERS=8.8.8.8,8.8.4.4
  #    volumes:
  #      - /root/AppData/qbittorrent:/config
  #      - /srv/dev-disk-by-uuid-49249ec1-c065-4648-a53d-bcfd368f4929/Torrents:/downloads
  #    ports:
  #      - 8080:8080
  #      - 8999:8999
  #      - 8999:8999/udp
  #    restart: unless-stopped
  #
  #  dashboard:
  #    image: lscr.io/linuxserver/heimdall:latest
  #    container_name: heimdall
  #    environment:
  #      - PUID=1000
  #      - PGID=1000
  #      - TZ=Asia/Manila
  #    volumes:
  #      - /home/$USER/docker-homelab/heimdall/config:/config
  #    ports:
  #      - 8080:80
  #      - 8443:443
  #    restart: unless-stopped
  #
  #  os-container-0:
  #    image: fedora:latest
  #    container_name: fedora
  #    restart: unless-stopped
  #    tty: true
  #  
  #  os-container-1:
  #    image: kalilinux/kali-rolling 
  #    container_name: kali 
  #    restart: unless-stopped
  #    tty: true
  #  
  #  os-container-2:
  #    image: debian:latest 
  #    container_name: debian 
  #    restart: unless-stopped
  #    tty: tru
  #
  #  os-container-3:
  #    image: ubuntu:latest 
  #    container_name: ubuntu 
  #    restart: unless-stopped
  #    tty: true
  #    ports:
  #      - 3000:3000
  #      - 5000:5000
  #
  #  db-admin:
  #    image: linuxserver/phpmyadmin:5.2.1
  #    container_name: phpmyadmin
  #    environment:
  #      - TZ=Asia/Manila # Specify a timezone to use
  #      - PUID=1000 # User ID to run as
  #      - PMA_ARBITRARY=1 # Set to 1 to allow you to connect to any server. Setting to 0 will only allow you to connect to specified hosts
  #      - PMA_ABSOLUTE_URI=http://192.168.1.103 # Set the URL you will use to access the web UI
  #      - PGID=1000 # Group ID to run as
  #    volumes:
  #      - /home/ken/Docker/phpmyadmin/config:/config # Contains all relevant configuration files.
  #    ports:
  #      - 80:80/tcp # Web UI
  #
  #  db:
  #    image: ubuntu/mysql:8.0-22.04_beta
  #    container_name: mysql
  #    environment:
  #      - TZ=Asia/Manila
  #      - MYSQL_ROOT_PASSWORD=adminSQL_isme!(>!<)
  #    ports:
  #      - 30306:3306
  #    volumes:
  #      - /home/ken/Docker/mysql/data:/var/lib/mysql
  #       # volume for mysql config
  #      - /home/ken/Docker/mysql/config/files/:/etc/mysql/mysql.conf.d/ # create my.cnf with [mysqld] \bind-address=0.0.0.0
  #
  #  dev-os:
  #    image: ubuntu:latest
  #    container_name: ubuntu
  #    restart: unless-stopped
  #    ports:
  #      - 8081:8080
  #    tty: true
  #version: '3.5'
  #services:
  #
  #  portainer:
  #    image: portainer/portainer-ce:latest
  #    container_name: portainer
  #    volumes:
  #      - portainer-data:/data
  #      - /var/run/docker.sock:/var/run/docker.sock
  #    restart: always
  #
  #  homer:
  #    image: b4bz/homer:latest
  #    #to build from source, comment previous line and uncomment below
  #    #build: .
  #    container_name: homer
  #    volumes:
  #      - /home/$USER/docker/my-homer-dashboard/assets/:/www/assets
  #    # networks:
  #    #   - npm-net
  #    environment:
  #      - init_assets=1
  #      - ipv6_disable=1
  #    # ports:
  #    #   - 8080:8080
  #    user: 1000:1000 # default
  #    restart: unless-stopped 
  #      
  #
  #  
  #volumes:
  #  portainer-data:
