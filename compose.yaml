version: '3.5'
services:

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    volumes:
      - portainer-data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      #- "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      #- "82:80/tcp"
    # networks:
    #   - npm-net
    env_file:
      - pihole.env
    # environment:
    #  TZ:
    #  WEBPASSWORD:
    # Volumes store your data between container upgrades
    volumes:
      - '/home/$USER/docker-homelab/pi-hole/etc-pihole:/etc/pihole'
      - '/home/$USER/docker-homelab/pi-hole/etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    #cap_add:
      #- NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped

  homer:
    image: b4bz/homer:latest
    #to build from source, comment previous line and uncomment below
    #build: .
    container_name: homer
    volumes:
      - /home/$USER/docker-homelab/homer/assets/:/www/assets
    # networks:
    #   - npm-net
    environment:
      - init_assets=1
      - ipv6_disable=1
    # ports:
    #   - 8080:8080
    user: 1000:1000 # default
    restart: unless-stopped 

  npm:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    container_name: npm
    ports:
      # These ports are in format <host-port>:<container-port>
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      #- '81:81' # Comment out after creating a proxy host for the service
      # Add any other Stream port you want to expose
      # - '21:21' # FTP
    # networks:
    #   - npm-net
    environment:
      DISABLE_IPV6: 'true'
    volumes:
      - proxy-data:/data
      - proxy-data:/etc/letsencrypt

volumes:
  proxy-data:
  proxy-db-data:
  portainer-data:

# networks:
#   npm-net:
#     driver: bridge
